"""Add Aperture Frames and Glass

Revision ID: ab96affb1df7
Revises: 8315a8164db8
Create Date: 2025-07-07 15:00:13.181825

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ab96affb1df7'
down_revision: Union[str, None] = '8315a8164db8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aperture_element_frame',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, default='Unnamed Frame'),
    sa.Column('width_mm', sa.Float(), nullable=False, default=100.0),
    sa.Column('u_value_w_m2k', sa.Float(), nullable=False, default=1.0),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_aperture_element_frame_id'), 'aperture_element_frame', ['id'], unique=False)
    op.create_table('aperture_element_glazing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, default='Unnamed Glazing'),
    sa.Column('u_value_w_m2k', sa.Float(), nullable=False, default=1.0),
    sa.Column('g_value', sa.Float(), nullable=False, default=0.5),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_aperture_element_glazing_id'), 'aperture_element_glazing', ['id'], unique=False)
    
    # Add name column as nullable first, then populate and set NOT NULL
    op.add_column('aperture_elements', sa.Column('name', sa.String(length=255), nullable=True))
    op.execute("UPDATE aperture_elements SET name = 'Unnamed Aperture-Element' WHERE name IS NULL")
    op.alter_column('aperture_elements', 'name', nullable=False, server_default='Unnamed Aperture-Element')
    
    op.add_column('aperture_elements', sa.Column('glazing_id', sa.Integer(), nullable=True))
    op.add_column('aperture_elements', sa.Column('frame_top_id', sa.Integer(), nullable=True))
    op.add_column('aperture_elements', sa.Column('frame_right_id', sa.Integer(), nullable=True))
    op.add_column('aperture_elements', sa.Column('frame_bottom_id', sa.Integer(), nullable=True))
    op.add_column('aperture_elements', sa.Column('frame_left_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_frame', ['frame_left_id'], ['id'])
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_frame', ['frame_top_id'], ['id'])
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_frame', ['frame_right_id'], ['id'])
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_glazing', ['glazing_id'], ['id'])
    op.create_foreign_key(None, 'aperture_elements', 'aperture_element_frame', ['frame_bottom_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.drop_constraint(None, 'aperture_elements', type_='foreignkey')
    op.drop_column('aperture_elements', 'frame_left_id')
    op.drop_column('aperture_elements', 'frame_bottom_id')
    op.drop_column('aperture_elements', 'frame_right_id')
    op.drop_column('aperture_elements', 'frame_top_id')
    op.drop_column('aperture_elements', 'glazing_id')
    op.drop_column('aperture_elements', 'name')
    op.drop_index(op.f('ix_aperture_element_glazing_id'), table_name='aperture_element_glazing')
    op.drop_table('aperture_element_glazing')
    op.drop_index(op.f('ix_aperture_element_frame_id'), table_name='aperture_element_frame')
    op.drop_table('aperture_element_frame')
    # ### end Alembic commands ###
