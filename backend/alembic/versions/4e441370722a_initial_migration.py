"""Initial Migration

Revision ID: 4e441370722a
Revises: 
Create Date: 2025-05-20 15:03:25.088524

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4e441370722a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('airtable_bases',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('airtable_token', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_airtable_bases_id'), 'airtable_bases', ['id'], unique=False)
    op.create_table('assembly_materials',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('argb_color', sa.String(), nullable=False),
    sa.Column('conductivity_w_mk', sa.Float(), nullable=False),
    sa.Column('emissivity', sa.Float(), nullable=False),
    sa.Column('density_kg_m3', sa.Float(), nullable=False),
    sa.Column('specific_heat_j_kgk', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assembly_materials_id'), 'assembly_materials', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('airtable_tables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('at_ref', sa.String(), nullable=False),
    sa.Column('parent_base_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_base_id'], ['airtable_bases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_airtable_tables_at_ref'), 'airtable_tables', ['at_ref'], unique=False)
    op.create_index(op.f('ix_airtable_tables_id'), 'airtable_tables', ['id'], unique=False)
    op.create_index(op.f('ix_airtable_tables_name'), 'airtable_tables', ['name'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('bt_number', sa.String(), nullable=False),
    sa.Column('phius_number', sa.String(), nullable=True),
    sa.Column('phius_dropbox_url', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('airtable_base_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['airtable_base_id'], ['airtable_bases.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_bt_number'), 'projects', ['bt_number'], unique=False)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_phius_dropbox_url'), 'projects', ['phius_dropbox_url'], unique=False)
    op.create_index(op.f('ix_projects_phius_number'), 'projects', ['phius_number'], unique=False)
    op.create_table('assemblies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_users',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'user_id')
    )
    op.create_table('assembly_layers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('thickness_mm', sa.Float(), nullable=False),
    sa.Column('assembly_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assembly_id'], ['assemblies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assembly_layer_segments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('layer_id', sa.Integer(), nullable=True),
    sa.Column('material_id', sa.String(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('width_mm', sa.Float(), nullable=False),
    sa.Column('steel_stud_spacing_mm', sa.Float(), nullable=True),
    sa.Column('is_continuous_insulation', sa.Boolean(), nullable=False),
    sa.Column('specification_status', sa.Enum('COMPLETE', 'MISSING', 'QUESTION', 'NA', name='specification_status_enum'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['layer_id'], ['assembly_layers.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['assembly_materials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('material_datasheets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('segment_id', sa.Integer(), nullable=False),
    sa.Column('full_size_url', sa.String(), nullable=False),
    sa.Column('thumbnail_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['segment_id'], ['assembly_layer_segments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('material_photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('segment_id', sa.Integer(), nullable=False),
    sa.Column('full_size_url', sa.String(), nullable=False),
    sa.Column('thumbnail_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['segment_id'], ['assembly_layer_segments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('material_photos')
    op.drop_table('material_datasheets')
    op.drop_table('assembly_layer_segments')
    op.drop_table('assembly_layers')
    op.drop_table('project_users')
    op.drop_table('assemblies')
    op.drop_index(op.f('ix_projects_phius_number'), table_name='projects')
    op.drop_index(op.f('ix_projects_phius_dropbox_url'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_bt_number'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_airtable_tables_name'), table_name='airtable_tables')
    op.drop_index(op.f('ix_airtable_tables_id'), table_name='airtable_tables')
    op.drop_index(op.f('ix_airtable_tables_at_ref'), table_name='airtable_tables')
    op.drop_table('airtable_tables')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_assembly_materials_id'), table_name='assembly_materials')
    op.drop_table('assembly_materials')
    op.drop_index(op.f('ix_airtable_bases_id'), table_name='airtable_bases')
    op.drop_table('airtable_bases')
    # ### end Alembic commands ###
